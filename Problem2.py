'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence
whose values do not exceed four million, find the sum of the even-valued terms.
'''

def algorithm(max):
    nums = []
    theSum = 0
    nums.append(1)
    nums.append(2)

    for x in range (0, max):
        nums.append(fibonacci(nums[x], nums[x + 1]))

        if (x % 2 != 0):
            theSum += nums[x]

    return theSum

def fibonacci(num1, num2):
    return (num1 + num2)

def main():
    # verifying with an example
    print (str(algorithm(10)) + " should equal " + str(2 + 5 + 13 + 34 + 89))

    # solving the problem
    # print ("answer: " + str(algorithm(4000000)))

if __name__ == '__main__':
    main()
