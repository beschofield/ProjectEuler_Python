'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence
whose values do not exceed four million, find the sum of the even-valued terms.
'''

def algorithm(maxValue):
    nums = []
    nums.append(1)
    nums.append(2)

    theSum = 0
    x = 0

    # building the list
    while (nums[len(nums) - 1] < maxValue):
        nums.append(fibonacci(nums[x], nums[x + 1]))
        x = x + 1

    for n in nums:
        if (n % 2 == 0):
            print(n)
            theSum += n

    return theSum

def fibonacci(num1, num2):
    return (num1 + num2)

def main():
    # verifying with an example
    print (str(algorithm(70)) + " should equal " + str(44))

    # solving the problem
    print ("answer: " + str(algorithm(4000000)))

if __name__ == '__main__':
    main()
